openapi: 3.0.3
info:
  title: WebTech Lab3 API
  version: '1.0.0'
servers:
  - url: https://localhost:8080
tags:
  - name: book
  - name: user
paths:
  /books:
    post:
      tags:
        - book
      requestBody:
        $ref: '#/components/requestBodies/PostBookRequest'
      summary: Добавить книгу
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookExtended'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - book
      summary: Получить список всех книг
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookExtended'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /books/{bookId}:
    get:
      tags:
        - book
      parameters:
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
      summary: Получить книгу по id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookExtended'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - book
      parameters:
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
      summary: Редактировать книгу по id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookExtended'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - book
      parameters:
        - in: path
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
      summary: Удалить книгу по id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookExtended'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Book:
      type: object
      properties:
        name:
          type: string
          example: 'The Lord of the Rings'
        author:
          type: string
          example: 'J.R.R. Tolkien'
        description:
          type: string
          example: 'This is some description about a book.'
        price:
          type: number
          example: '10.00'
    BookExtended:
      type: object
      allOf:
        - type: object
          properties:
            id:
              type: integer
              format: int64
        - $ref: '#/components/schemas/Book'
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          example: 404
        message:
          type: object
          properties:
            lang_ru:
              type: string
              example: Сообщение на русском
            lang_en:
              type: string
              example: A message in English

  requestBodies:
    PostBookRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Book'
    
